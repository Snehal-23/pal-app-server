{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar express = require(\"express\");\n\nvar bcrypt = require(\"bcryptjs\");\n\nvar jwt = require(\"jsonwebtoken\");\n\nvar User = require(\"../models/user\");\n\nexports.getUsers = function _callee(req, res) {\n  var userList;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(User.find().select(\"-passwordHash\"));\n\n        case 2:\n          userList = _context.sent;\n\n          if (!userList) {\n            res.json({\n              success: false,\n              message: \"No data found\"\n            });\n          } else {\n            res.json({\n              data: userList,\n              message: \"success\",\n              status: 1\n            });\n          }\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getUser = function (req, res) {\n  var id = req.params.id;\n  User.findById(id).select(\"-passwordHash\").then(function (user) {\n    res.status(200).json({\n      data: user,\n      message: \"success\",\n      status: 1\n    });\n  }).catch(function (err) {\n    res.json({\n      status: 0,\n      message: err\n    });\n  });\n};\n\nexports.postUser = function (req, res) {\n  var user = new User({\n    username: req.body.username,\n    fname: req.body.fname,\n    lname: req.body.fname,\n    email: req.body.email,\n    passwordHash: bcrypt.hashSync(req.body.password, 10),\n    street: req.body.street,\n    apartment: req.body.apartment,\n    city: req.body.city,\n    zip: req.body.zip,\n    country: req.body.country,\n    phone: req.body.phone,\n    isAdmin: req.body.isAdmin\n  });\n  user.save().then(function (createdUser) {\n    res.status(201).json({\n      data: createdUser,\n      message: \"Success\",\n      status: 1\n    });\n  }).catch(function (err) {\n    res.status(500).json({\n      message: err,\n      status: 0\n    });\n  });\n};\n\nexports.login = function _callee2(req, res) {\n  var user, secret, token;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(User.findOne({\n            email: req.body.email\n          }));\n\n        case 2:\n          user = _context2.sent;\n\n          if (!user) {\n            res.status(400).json({\n              status: 0,\n              message: \"The user not found\"\n            });\n          }\n\n          if (user && bcrypt.compareSync(req.body.password, user.passwordHash)) {\n            secret = process.env.SECRET;\n            token = jwt.sign({\n              user: user.id,\n              isAdmin: user.isAdmin\n            }, secret, {\n              expiresIn: \"1d\"\n            });\n            res.status(200).json({\n              token: token,\n              user: user.email,\n              status: 1,\n              message: \"User authenticated\"\n            });\n          } else {\n            res.status(400).json({\n              status: 0,\n              message: \"wrong cred\"\n            });\n          }\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.countUsers = function (req, res) {\n  User.countDocuments().then(function (count) {\n    res.status(200).json({\n      data: count,\n      message: \"success\",\n      status: 1\n    });\n  }).catch(function (err) {\n    res.status(500).send({\n      message: err,\n      status: 0\n    });\n  });\n};\n\nexports.deleteUser = function (req, res) {\n  var id = req.params.id;\n\n  if (!mongoose.isValidObjectId(id)) {\n    return res.status(400).send({\n      message: \"Invalid product id\",\n      status: 0\n    });\n  }\n\n  User.findByIdAndRemove(id).then(function (deletedUser) {\n    res.status(200).send({\n      message: \"User deleted successfully\",\n      status: 1\n    });\n  }).catch(function (err) {\n    res.status(500).send({\n      message: err,\n      status: 0\n    });\n  });\n};","map":{"version":3,"names":["express","require","bcrypt","jwt","User","exports","getUsers","req","res","find","select","userList","json","success","message","data","status","getUser","id","params","findById","then","user","catch","err","postUser","username","body","fname","lname","email","passwordHash","hashSync","password","street","apartment","city","zip","country","phone","isAdmin","save","createdUser","login","findOne","compareSync","secret","process","env","SECRET","token","sign","expiresIn","countUsers","countDocuments","count","send","deleteUser","mongoose","isValidObjectId","findByIdAndRemove","deletedUser"],"sources":["C:/Users/snehal/eduvanz/pal/controllers/user.js"],"sourcesContent":["const express = require(\"express\");\r\nconst bcrypt = require(\"bcryptjs\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst User = require(\"../models/user\");\r\n\r\nexports.getUsers = async (req, res) => {\r\n  const userList = await User.find().select(\"-passwordHash\");\r\n  if (!userList) {\r\n    res.json({ success: false, message: \"No data found\" });\r\n  } else {\r\n    res.json({ data: userList, message: \"success\", status: 1 });\r\n  }\r\n};\r\n\r\nexports.getUser = (req, res) => {\r\n  const id = req.params.id;\r\n  User.findById(id)\r\n    .select(\"-passwordHash\")\r\n    .then((user) => {\r\n      res.status(200).json({ data: user, message: \"success\", status: 1 });\r\n    })\r\n    .catch((err) => {\r\n      res.json({ status: 0, message: err });\r\n    });\r\n};\r\n\r\nexports.postUser = (req, res) => {\r\n  const user = new User({\r\n    username: req.body.username,\r\n    fname: req.body.fname,\r\n    lname: req.body.fname,\r\n    email: req.body.email,\r\n    passwordHash: bcrypt.hashSync(req.body.password, 10),\r\n    street: req.body.street,\r\n    apartment: req.body.apartment,\r\n    city: req.body.city,\r\n    zip: req.body.zip,\r\n    country: req.body.country,\r\n    phone: req.body.phone,\r\n    isAdmin: req.body.isAdmin,\r\n  });\r\n  user\r\n    .save()\r\n    .then((createdUser) => {\r\n      res\r\n        .status(201)\r\n        .json({ data: createdUser, message: \"Success\", status: 1 });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json({\r\n        message: err,\r\n        status: 0,\r\n      });\r\n    });\r\n};\r\n\r\nexports.login = async (req, res) => {\r\n  const user = await User.findOne({ email: req.body.email });\r\n  if (!user) {\r\n    res.status(400).json({ status: 0, message: \"The user not found\" });\r\n  }\r\n  if (user && bcrypt.compareSync(req.body.password, user.passwordHash)) {\r\n    const secret = process.env.SECRET;\r\n    const token = jwt.sign(\r\n      {\r\n        user: user.id,\r\n        isAdmin: user.isAdmin,\r\n      },\r\n      secret,\r\n      { expiresIn: \"1d\" }\r\n    );\r\n    res.status(200).json({\r\n      token: token,\r\n      user: user.email,\r\n      status: 1,\r\n      message: \"User authenticated\",\r\n    });\r\n  } else {\r\n    res.status(400).json({ status: 0, message: \"wrong cred\" });\r\n  }\r\n};\r\n\r\nexports.countUsers = (req, res) => {\r\n  User.countDocuments()\r\n    .then((count) => {\r\n      res.status(200).json({ data: count, message: \"success\", status: 1 });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).send({ message: err, status: 0 });\r\n    });\r\n};\r\n\r\nexports.deleteUser = (req, res) => {\r\n  let id = req.params.id;\r\n  if (!mongoose.isValidObjectId(id)) {\r\n    return res.status(400).send({ message: \"Invalid product id\", status: 0 });\r\n  }\r\n  User.findByIdAndRemove(id)\r\n    .then((deletedUser) => {\r\n      res.status(200).send({ message: \"User deleted successfully\", status: 1 });\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).send({ message: err, status: 0 });\r\n    });\r\n};\r\n\r\n// gini pwd:1287e4398\r\n// granger@gmail.com:\"abc123\"\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}