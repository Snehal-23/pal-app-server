{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar express = require(\"express\");\n\nvar app = express();\n\nvar Category = require(\"../models/category\");\n\nvar _require = require(\"../routes/products\"),\n    options = _require.options;\n\nexports.getCategories = function _callee(req, res) {\n  var categoryList;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Category.find());\n\n        case 2:\n          categoryList = _context.sent;\n\n          if (!categoryList) {\n            res.status(404).json({\n              message: \"No data found\",\n              status: 0\n            });\n          } else {\n            res.status(200).json({\n              data: categoryList,\n              message: \"Success\",\n              status: 1\n            });\n          }\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.getCategory = function (req, res) {\n  var id = req.params.id;\n  Category.findById(id).then(function (category) {\n    if (!category) {\n      res.status(404).json({\n        message: \"No data found\",\n        status: 0\n      });\n    } else {\n      res.status(200).json({\n        message: \"success\",\n        status: 1,\n        data: category\n      });\n    }\n  }).catch(function (err) {\n    res.status(500).json({\n      message: err,\n      status: 0\n    });\n  });\n};\n\nexports.postCategory = function _callee2(req, res) {\n  var category, createdCat;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          category = new Category({\n            name: req.body.name,\n            icon: req.body.icon,\n            color: req.body.color\n          });\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(category.save());\n\n        case 3:\n          createdCat = _context2.sent;\n\n          if (createdCat) {\n            _context2.next = 6;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", res.status(500).json({\n            message: \"The category can not be created\",\n            status: 0\n          }));\n\n        case 6:\n          res.status(201).json({\n            data: createdCat,\n            message: \"success\",\n            status: 1\n          });\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexports.deleteCategory = function (req, res) {\n  var id = req.params.id;\n  Category.findByIdAndRemove(id).then(function (deletedCat) {\n    if (deletedCat) {\n      return res.status(200).json({\n        status: 1,\n        message: \"Category successfully deleted\"\n      });\n    } else {\n      return res.status(404).json({\n        status: 0,\n        message: \"Category not found\"\n      });\n    }\n  }).catch(function (err) {\n    res.status(500).json({\n      message: err,\n      status: 0\n    });\n  });\n};\n\nexports.updateCategory = function (req, res) {\n  var id = req.params.id;\n  Category.findByIdAndUpdate(id, {\n    name: req.body.name,\n    icon: req.body.icon,\n    color: req.body.color\n  }, {\n    new: true\n  }).then(function (updatedCat) {\n    if (!updatedCat) {\n      res.status(404).json({\n        message: \"No data found\",\n        status: 0\n      });\n    } else {\n      res.status(200).json({\n        message: \"success\",\n        status: 1,\n        data: updatedCat\n      });\n    }\n  }).catch(function (err) {\n    res.status(500).json({\n      message: err,\n      status: 0\n    });\n  });\n};","map":{"version":3,"names":["express","require","app","Category","options","exports","getCategories","req","res","find","categoryList","status","json","message","data","getCategory","id","params","findById","then","category","catch","err","postCategory","name","body","icon","color","save","createdCat","deleteCategory","findByIdAndRemove","deletedCat","updateCategory","findByIdAndUpdate","new","updatedCat"],"sources":["C:/Users/snehal/eduvanz/pal/controllers/category.js"],"sourcesContent":["const express = require(\"express\");\r\nconst app = express();\r\n\r\nconst Category = require(\"../models/category\");\r\nconst { options } = require(\"../routes/products\");\r\n\r\nexports.getCategories = async (req, res) => {\r\n  const categoryList = await Category.find();\r\n  if (!categoryList) {\r\n    res.status(404).json({ message: \"No data found\", status: 0 });\r\n  } else {\r\n    res.status(200).json({ data: categoryList, message: \"Success\", status: 1 });\r\n  }\r\n};\r\n\r\nexports.getCategory = (req, res) => {\r\n  const id = req.params.id;\r\n  Category.findById(id)\r\n    .then((category) => {\r\n      if (!category) {\r\n        res.status(404).json({ message: \"No data found\", status: 0 });\r\n      } else {\r\n        res.status(200).json({\r\n          message: \"success\",\r\n          status: 1,\r\n          data: category,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json({ message: err, status: 0 });\r\n    });\r\n};\r\nexports.postCategory = async (req, res) => {\r\n  let category = new Category({\r\n    name: req.body.name,\r\n    icon: req.body.icon,\r\n    color: req.body.color,\r\n  });\r\n  const createdCat = await category.save();\r\n  if (!createdCat) {\r\n    return res.status(500).json({\r\n      message: \"The category can not be created\",\r\n      status: 0,\r\n    });\r\n  }\r\n  res.status(201).json({ data: createdCat, message: \"success\", status: 1 });\r\n};\r\n\r\nexports.deleteCategory = (req, res) => {\r\n  let id = req.params.id;\r\n  Category.findByIdAndRemove(id)\r\n    .then((deletedCat) => {\r\n      if (deletedCat) {\r\n        return res.status(200).json({\r\n          status: 1,\r\n          message: \"Category successfully deleted\",\r\n        });\r\n      } else {\r\n        return res.status(404).json({\r\n          status: 0,\r\n          message: \"Category not found\",\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json({ message: err, status: 0 });\r\n    });\r\n};\r\n\r\nexports.updateCategory = (req, res) => {\r\n  let id = req.params.id;\r\n  Category.findByIdAndUpdate(\r\n    id,\r\n    { name: req.body.name, icon: req.body.icon, color: req.body.color },\r\n    {\r\n      new: true, //to get updated object\r\n    }\r\n  )\r\n    .then((updatedCat) => {\r\n      if (!updatedCat) {\r\n        res.status(404).json({ message: \"No data found\", status: 0 });\r\n      } else {\r\n        res.status(200).json({\r\n          message: \"success\",\r\n          status: 1,\r\n          data: updatedCat,\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      res.status(500).json({ message: err, status: 0 });\r\n    });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}